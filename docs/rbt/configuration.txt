=============
Configuration
=============

There are many ways to configure :command:`rbt` in order to associate
a Review Board server with a repository. The ideal setup is to configure
a repository to point to a Review Board server, so that users can use
:command:`rbt` out of the box, but there are other methods available.


Repository Configuration
========================

Some repository types can have special metadata associated to point to a
server. All repository types support per-directory dot files.


.reviewboardrc
--------------

The :file:`.reviewboardrc` file is a generic place for configuring a
repository. This must be in a directory in the user's checkout path to work.
It must parse as a valid Python file, or you'll see an error when using
:command:`rbt`.


Git Properties
--------------

Repository information can be set in a ``reviewboard.url`` property on
the Git tree. Users may need to do this themselves on their own Git
tree, so in some cases, it may be ideal to use dotfiles instead.

To set the property on a Git tree, type::

    $ git config reviewboard.url http://reviewboard.example.com


Perforce Counters
-----------------

Repository information can be set on Perforce servers by using
``reviewboard.url`` Perforce counters. How this works varies between versions
of Perforce.

Perforce version 2008.1 and up support strings in counters, so you can simply
do::

    $ p4 counter reviewboard.url http://reviewboard.example.com

Older versions of Perforce support only numeric counters, so you must encode
the server as part of the counter name. As ``/`` characters aren't supported
in counter names, they must be replaced by ``|`` characters. ``|`` is a
special character in shells, so you'll need need to escape these using ``\|``.
For example::

    $ p4 counter reviewboard.url.http:\|\|reviewboard.example.com 1


Subversion Properties
---------------------

Repository information can be set in a ``reviewboard:url`` property on
a directory. This is usually done on whatever directory or directories
are common as base checkout paths. This usually means something like
:file:`/trunk` or :file:`/trunk/myproject`. If the directory is in the
user's checkout, it will be faster to find the property.

To set the property on a directory, type::

    $ svn propset reviewboard:url http://reviewboard.example.com .


REPOSITORY
~~~~~~~~~~

Normally, the repository path is automatically determined and passed to
Review Board, but on more complex setups you may need to tell
:command:`rbt` and Review Board specifically which repository you
want to use.

You can use the ``REPOSITORY`` setting to specify the path or the numeric
ID of the repository to use. For example::

    REPOSITORY = 'https://svn.example.com/'

If using Review Board 1.5.3 or higher, you can also choose to specify the
repository name. This is the same name as on Review Board's New Review Request
page. For example::

    REPOSITORY = 'RBTools'


REVIEWBOARD_URL
~~~~~~~~~~~~~~~

To specify the Review Board server to use, you can use the
``REVIEWBOARD_URL`` setting. This takes the URL to the Review Board server
as a value. For example::

    REVIEWBOARD_URL = "http://reviewboard.example.com"


Custom User Configuration
=========================

If the repository isn't configured for :command:`rbt` and a
custom script isn't provided, you can create a :file:`.reviewboardrc`
file in your HOME directory (usually :file:`/home/{username}` on Linux,
:file:`$USERPROFILE\\Local Settings\\Application Data` on Windows).

In the simplest case with only one Review Board server you'll ever
interact with, the file can simply contain::

    REVIEWBOARD_URL = "http://reviewboard.example.com"


A more complex setup for servers based on repository paths will look
more like::

    TREES = {
        'http://svn.example.com': {
            'REVIEWBOARD_URL': 'http://reviewboard.example.com',
        },
        'username@cvs.example.com:/cvsroot/cvs': {
            'REVIEWBOARD_URL': 'http://reviewboard.example.com',
        },
    }


Any number of repository paths can be specified. The repository path
must match a repository configured in the Review Board server.
